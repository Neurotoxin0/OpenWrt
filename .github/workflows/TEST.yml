#=================================================
# Description: Github Workflow for Project Openwrt
# Lisence: MIT
# Author: kenzo; coolsnowwolf; KFERMercer; P3TERX
# Altered by: Neurotoxin0
#
# Copyright (C) 2019-2020 P3TERX
#
# Copyright (C) 2020 KFERMercer
#=================================================
name: < TEST >

on: 
  workflow_dispatch: 

jobs:
  build:
    name: Compile Openwrt Firmware / 固件编译
    runs-on: ubuntu-latest
    
    if: github.event.repository.owner.id == github.event.sender.id  # Only Star from reppsitory owner may trigger
    
    steps:
    - name: Init / 初始化
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
    
    - name: Clone Source Codes & Alter Feeds / 克隆源码并更改Feed列表
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master 
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH ./OP
        cd OP
        echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
        echo "src-git kenzo https://github.com/kenzok8/openwrt-packages.git" >> ./feeds.conf.default
        echo "src-git small https://github.com/kenzok8/small.git" >> ./feeds.conf.default
        cd package
        git clone https://github.com/sensec/openwrt-udp2raw.git
        git clone https://github.com/sensec/luci-app-udp2raw.git


    - name: Feeds Update & Install / 更新并安装Feeds
      working-directory: ./OP
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Clone Config File / 克隆配置文件
      uses: actions/checkout@v2
      with:
        path: ./Source_Code/
    
    - name: Import / Generate Config File / 导入或生成配置文件
      working-directory: ./OP 
      run: |
        mv ../Source_Code/.github/.config_TEST ./.config
        make defconfig

    - name: Personalized / 个性化命令
      working-directory: ./OP
      run: |
        sed -i 's/192.168.1.1/192.168.31.2/g' ./package/base-files/files/bin/config_generate
        
    - name: Download Make File / 下载编译库
      working-directory: ./OP
      run: |
        make download -j16
        make download -j8
        echo "------------------------"
        find dl -size -1024c -exec ls -l {} \;
        echo "------------------------"
        find dl -size -1024c -exec rm -f {} \;
    
    - name: Compile Firmware / 开始编译
      working-directory: ./OP
      run: |
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s
     
    - name: Prepare Deliver Files / 准备导出文件
      run: |
        mkdir buildinfo
        mv $(find ./OP/bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./buildinfo
        
        mkdir packages
        mv $(find ./OP/bin/packages/ -type f -name "*.ipk") ./packages

        mkdir firmware
        rm -rf $(find ./OP/bin/targets/ -type d -name "packages")

        cd firmware 
        mkdir All
        cp -rf $(find ../OP/bin/targets/ -type f) ./All
        cp -rf ../buildinfo ./All
        cp -rf ../packages ./All
        
        mkdir BIOS
        mv $(find ../OP/bin/targets/ -type f -name "openwrt-x86-64-generic-squashfs-combined.*") ./BIOS
        
        mkdir EFI
        mv $(find ../OP/bin/targets/ -type f -name "openwrt-x86-64-generic-squashfs-combined-efi.*") ./EFI

    - name: Deliver buildinfo / 传输输出配置
      uses: actions/upload-artifact@v2
      with:
        name: Buildinfo
        path: ./buildinfo

    - name: Deliver packages / 传输软件包
      uses: actions/upload-artifact@v2
      with:
        name: Packages
        path: ./packages

    - name: Deliver all compiled files / 传输所有输出文件
      uses: actions/upload-artifact@v2
      with:
        name: All Compiled Files
        path: ./firmware/All
    
    - name: Deliver BIOS firmware / 传输 BIOS 引导固件
      uses: actions/upload-artifact@v2
      with:
        name: Firmware-BIOS
        path: ./firmware/BIOS

    - name: Deliver EFI firmware / 传输 EFI 引导固件
      uses: actions/upload-artifact@v2
      with:
        name: Firmware-EFI
        path: ./firmware/EFI